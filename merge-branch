#!/bin/sh

# Script to merge revisions from trunk to the desired branch
# Usage: merge-branch [-b branch] [-h] revision...
# Kopyleft (K) 2006 by Warp Networks
# All rights reversed

SVN_URL=https://svn.ebox-platform.com/ebox-platform/
TRUNK_URL=${SVN_URL}trunk/

readonly SVN_URL TRUNK_URL

usage() {

    echo "Usage: $0 [-b branch] [-h] revision..."
    echo "Where -b branch : branch number in ebox-platform subversion"
    echo "      -h        : Show this message"
    echo "      revision  : You can add as many revision as you like"
    
}

branch_url=~/dev/svn/ebox-platform/branches/
branch=0.8
# Getting optional options
while getopts ":b:h" opt
  do
  case $opt in
      b)
	  branch=$OPTARG
	  ;;
      h) 
	  usage
	  exit 0
	  ;;
      *)
	  echo "Unknown option, please read the instructions below..."
	  usage
	  exit 0
	  ;;
  esac
done

shift $(($OPTIND - 1))

# Checking if some revisions are passed
if [ $# -eq 0 ]; then 
    echo "At least, a revision number is needed"
    # Print usage
    usage
    exit 1
fi


branch_url=${branch_url}${branch}
cd $branch_url || exit 2

echo "Updating ..."
svn up

echo "Merging ..."

# Choose a file which does not exist using mktemp 
svnMessageFile=$(mktemp)
svnLogFile=$(mktemp)
# Make the file have owner-only permissions (Security hack!)
touch $svnMessageFile $svnLogFile
chmod 0600 $svnMessageFile $svnLogFile

# Starting commit message
svnMessage="Merged "
for rev in $*
do
	prev_rev=$(($rev - 1))
	# Merging revision $rev
	svn merge -r$prev_rev:$rev $TRUNK_URL
	# Composing the message
	svnMessage="${svnMessage}[${rev}] "
	# Getting useful information from log revision
	msgRevision=$(svn log -r $rev $SVN_URL | sed '1,3d' | head -n -1 | sed '/^ *$/d')
	echo " + [${rev}] -> ${msgRevision}" >> $svnLogFile
done

# Completing commit message
if [ $# -gt 1 ]; then
    svnMessage="${svnMessage} revisions"
else
    svnMessage="${svnMessage} revision"
fi
svnMessage="${svnMessage} into branches/${branch}"

echo $svnMessage > $svnMessageFile
cat $svnLogFile >> $svnMessageFile

echo "Committing ..."
svn ci --file $svnMessageFile

# Delete the temporary files
rm -f $svnMessageFile $svnLogFile